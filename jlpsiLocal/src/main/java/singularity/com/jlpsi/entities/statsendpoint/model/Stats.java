/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-01-14 17:53:03 UTC)
 * on 2015-03-01 at 17:52:36 UTC 
 * Modify at your own risk.
 */

package singularity.com.jlpsi.entities.statsendpoint.model;

/**
 * Model definition for Stats.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the statsendpoint. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Stats extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer complaints;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer computers;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String onlyId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer pupils;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer resovledComplaints;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer schools;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getComplaints() {
    return complaints;
  }

  /**
   * @param complaints complaints or {@code null} for none
   */
  public Stats setComplaints(java.lang.Integer complaints) {
    this.complaints = complaints;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getComputers() {
    return computers;
  }

  /**
   * @param computers computers or {@code null} for none
   */
  public Stats setComputers(java.lang.Integer computers) {
    this.computers = computers;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getOnlyId() {
    return onlyId;
  }

  /**
   * @param onlyId onlyId or {@code null} for none
   */
  public Stats setOnlyId(java.lang.String onlyId) {
    this.onlyId = onlyId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPupils() {
    return pupils;
  }

  /**
   * @param pupils pupils or {@code null} for none
   */
  public Stats setPupils(java.lang.Integer pupils) {
    this.pupils = pupils;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getResovledComplaints() {
    return resovledComplaints;
  }

  /**
   * @param resovledComplaints resovledComplaints or {@code null} for none
   */
  public Stats setResovledComplaints(java.lang.Integer resovledComplaints) {
    this.resovledComplaints = resovledComplaints;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSchools() {
    return schools;
  }

  /**
   * @param schools schools or {@code null} for none
   */
  public Stats setSchools(java.lang.Integer schools) {
    this.schools = schools;
    return this;
  }

  @Override
  public Stats set(String fieldName, Object value) {
    return (Stats) super.set(fieldName, value);
  }

  @Override
  public Stats clone() {
    return (Stats) super.clone();
  }

}
