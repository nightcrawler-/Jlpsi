/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-01-14 17:53:03 UTC)
 * on 2015-03-01 at 17:50:56 UTC 
 * Modify at your own risk.
 */

package singularity.com.jlpsi.entities.backboneendpoint;

/**
 * Service definition for Backboneendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BackboneendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Backboneendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the backboneendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://kiki-ke.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "backboneendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Backboneendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Backboneendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getUploadUrl".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link GetUploadUrl#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetUploadUrl getUploadUrl() throws java.io.IOException {
    GetUploadUrl result = new GetUploadUrl();
    initialize(result);
    return result;
  }

  public class GetUploadUrl extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.UploadUrl> {

    private static final String REST_PATH = "uploadurl";

    /**
     * Create a request for the method "getUploadUrl".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link GetUploadUrl#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetUploadUrl#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetUploadUrl() {
      super(Backboneendpoint.this, "GET", REST_PATH, null, singularity.com.jlpsi.entities.backboneendpoint.model.UploadUrl.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUploadUrl setAlt(java.lang.String alt) {
      return (GetUploadUrl) super.setAlt(alt);
    }

    @Override
    public GetUploadUrl setFields(java.lang.String fields) {
      return (GetUploadUrl) super.setFields(fields);
    }

    @Override
    public GetUploadUrl setKey(java.lang.String key) {
      return (GetUploadUrl) super.setKey(key);
    }

    @Override
    public GetUploadUrl setOauthToken(java.lang.String oauthToken) {
      return (GetUploadUrl) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUploadUrl setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUploadUrl) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUploadUrl setQuotaUser(java.lang.String quotaUser) {
      return (GetUploadUrl) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUploadUrl setUserIp(java.lang.String userIp) {
      return (GetUploadUrl) super.setUserIp(userIp);
    }

    @Override
    public GetUploadUrl set(String parameterName, Object value) {
      return (GetUploadUrl) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertComputer".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link InsertComputer#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link singularity.com.jlpsi.entities.backboneendpoint.model.Computer}
   * @return the request
   */
  public InsertComputer insertComputer(singularity.com.jlpsi.entities.backboneendpoint.model.Computer content) throws java.io.IOException {
    InsertComputer result = new InsertComputer(content);
    initialize(result);
    return result;
  }

  public class InsertComputer extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.Computer> {

    private static final String REST_PATH = "computer";

    /**
     * Create a request for the method "insertComputer".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link InsertComputer#execute()} method to invoke the remote
     * operation. <p> {@link InsertComputer#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link singularity.com.jlpsi.entities.backboneendpoint.model.Computer}
     * @since 1.13
     */
    protected InsertComputer(singularity.com.jlpsi.entities.backboneendpoint.model.Computer content) {
      super(Backboneendpoint.this, "POST", REST_PATH, content, singularity.com.jlpsi.entities.backboneendpoint.model.Computer.class);
    }

    @Override
    public InsertComputer setAlt(java.lang.String alt) {
      return (InsertComputer) super.setAlt(alt);
    }

    @Override
    public InsertComputer setFields(java.lang.String fields) {
      return (InsertComputer) super.setFields(fields);
    }

    @Override
    public InsertComputer setKey(java.lang.String key) {
      return (InsertComputer) super.setKey(key);
    }

    @Override
    public InsertComputer setOauthToken(java.lang.String oauthToken) {
      return (InsertComputer) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertComputer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertComputer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertComputer setQuotaUser(java.lang.String quotaUser) {
      return (InsertComputer) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertComputer setUserIp(java.lang.String userIp) {
      return (InsertComputer) super.setUserIp(userIp);
    }

    @Override
    public InsertComputer set(String parameterName, Object value) {
      return (InsertComputer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertPackageX".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link InsertPackageX#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link singularity.com.jlpsi.entities.backboneendpoint.model.PackageX}
   * @return the request
   */
  public InsertPackageX insertPackageX(singularity.com.jlpsi.entities.backboneendpoint.model.PackageX content) throws java.io.IOException {
    InsertPackageX result = new InsertPackageX(content);
    initialize(result);
    return result;
  }

  public class InsertPackageX extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.PackageX> {

    private static final String REST_PATH = "packagex";

    /**
     * Create a request for the method "insertPackageX".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link InsertPackageX#execute()} method to invoke the remote
     * operation. <p> {@link InsertPackageX#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link singularity.com.jlpsi.entities.backboneendpoint.model.PackageX}
     * @since 1.13
     */
    protected InsertPackageX(singularity.com.jlpsi.entities.backboneendpoint.model.PackageX content) {
      super(Backboneendpoint.this, "POST", REST_PATH, content, singularity.com.jlpsi.entities.backboneendpoint.model.PackageX.class);
    }

    @Override
    public InsertPackageX setAlt(java.lang.String alt) {
      return (InsertPackageX) super.setAlt(alt);
    }

    @Override
    public InsertPackageX setFields(java.lang.String fields) {
      return (InsertPackageX) super.setFields(fields);
    }

    @Override
    public InsertPackageX setKey(java.lang.String key) {
      return (InsertPackageX) super.setKey(key);
    }

    @Override
    public InsertPackageX setOauthToken(java.lang.String oauthToken) {
      return (InsertPackageX) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertPackageX setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertPackageX) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertPackageX setQuotaUser(java.lang.String quotaUser) {
      return (InsertPackageX) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertPackageX setUserIp(java.lang.String userIp) {
      return (InsertPackageX) super.setUserIp(userIp);
    }

    @Override
    public InsertPackageX set(String parameterName, Object value) {
      return (InsertPackageX) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertSoftware".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link InsertSoftware#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link singularity.com.jlpsi.entities.backboneendpoint.model.Software}
   * @return the request
   */
  public InsertSoftware insertSoftware(singularity.com.jlpsi.entities.backboneendpoint.model.Software content) throws java.io.IOException {
    InsertSoftware result = new InsertSoftware(content);
    initialize(result);
    return result;
  }

  public class InsertSoftware extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.Software> {

    private static final String REST_PATH = "software";

    /**
     * Create a request for the method "insertSoftware".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link InsertSoftware#execute()} method to invoke the remote
     * operation. <p> {@link InsertSoftware#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link singularity.com.jlpsi.entities.backboneendpoint.model.Software}
     * @since 1.13
     */
    protected InsertSoftware(singularity.com.jlpsi.entities.backboneendpoint.model.Software content) {
      super(Backboneendpoint.this, "POST", REST_PATH, content, singularity.com.jlpsi.entities.backboneendpoint.model.Software.class);
    }

    @Override
    public InsertSoftware setAlt(java.lang.String alt) {
      return (InsertSoftware) super.setAlt(alt);
    }

    @Override
    public InsertSoftware setFields(java.lang.String fields) {
      return (InsertSoftware) super.setFields(fields);
    }

    @Override
    public InsertSoftware setKey(java.lang.String key) {
      return (InsertSoftware) super.setKey(key);
    }

    @Override
    public InsertSoftware setOauthToken(java.lang.String oauthToken) {
      return (InsertSoftware) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertSoftware setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertSoftware) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertSoftware setQuotaUser(java.lang.String quotaUser) {
      return (InsertSoftware) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertSoftware setUserIp(java.lang.String userIp) {
      return (InsertSoftware) super.setUserIp(userIp);
    }

    @Override
    public InsertSoftware set(String parameterName, Object value) {
      return (InsertSoftware) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUser".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link InsertUser#execute()} method to invoke the remote operation.
   *
   * @param content the {@link singularity.com.jlpsi.entities.backboneendpoint.model.User}
   * @return the request
   */
  public InsertUser insertUser(singularity.com.jlpsi.entities.backboneendpoint.model.User content) throws java.io.IOException {
    InsertUser result = new InsertUser(content);
    initialize(result);
    return result;
  }

  public class InsertUser extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.User> {

    private static final String REST_PATH = "user";

    /**
     * Create a request for the method "insertUser".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link InsertUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link singularity.com.jlpsi.entities.backboneendpoint.model.User}
     * @since 1.13
     */
    protected InsertUser(singularity.com.jlpsi.entities.backboneendpoint.model.User content) {
      super(Backboneendpoint.this, "POST", REST_PATH, content, singularity.com.jlpsi.entities.backboneendpoint.model.User.class);
    }

    @Override
    public InsertUser setAlt(java.lang.String alt) {
      return (InsertUser) super.setAlt(alt);
    }

    @Override
    public InsertUser setFields(java.lang.String fields) {
      return (InsertUser) super.setFields(fields);
    }

    @Override
    public InsertUser setKey(java.lang.String key) {
      return (InsertUser) super.setKey(key);
    }

    @Override
    public InsertUser setOauthToken(java.lang.String oauthToken) {
      return (InsertUser) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUser setQuotaUser(java.lang.String quotaUser) {
      return (InsertUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUser setUserIp(java.lang.String userIp) {
      return (InsertUser) super.setUserIp(userIp);
    }

    @Override
    public InsertUser set(String parameterName, Object value) {
      return (InsertUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listComplaint".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link ListComplaint#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListComplaint listComplaint() throws java.io.IOException {
    ListComplaint result = new ListComplaint();
    initialize(result);
    return result;
  }

  public class ListComplaint extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponseComplaint> {

    private static final String REST_PATH = "complaint";

    /**
     * Create a request for the method "listComplaint".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link ListComplaint#execute()} method to invoke the remote
     * operation. <p> {@link ListComplaint#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected ListComplaint() {
      super(Backboneendpoint.this, "GET", REST_PATH, null, singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponseComplaint.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListComplaint setAlt(java.lang.String alt) {
      return (ListComplaint) super.setAlt(alt);
    }

    @Override
    public ListComplaint setFields(java.lang.String fields) {
      return (ListComplaint) super.setFields(fields);
    }

    @Override
    public ListComplaint setKey(java.lang.String key) {
      return (ListComplaint) super.setKey(key);
    }

    @Override
    public ListComplaint setOauthToken(java.lang.String oauthToken) {
      return (ListComplaint) super.setOauthToken(oauthToken);
    }

    @Override
    public ListComplaint setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListComplaint) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListComplaint setQuotaUser(java.lang.String quotaUser) {
      return (ListComplaint) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListComplaint setUserIp(java.lang.String userIp) {
      return (ListComplaint) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListComplaint setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String schoolId;

    /**

     */
    public java.lang.String getSchoolId() {
      return schoolId;
    }

    public ListComplaint setSchoolId(java.lang.String schoolId) {
      this.schoolId = schoolId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListComplaint setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListComplaint set(String parameterName, Object value) {
      return (ListComplaint) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listComputer".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link ListComputer#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListComputer listComputer() throws java.io.IOException {
    ListComputer result = new ListComputer();
    initialize(result);
    return result;
  }

  public class ListComputer extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponseComputer> {

    private static final String REST_PATH = "computer";

    /**
     * Create a request for the method "listComputer".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link ListComputer#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListComputer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListComputer() {
      super(Backboneendpoint.this, "GET", REST_PATH, null, singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponseComputer.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListComputer setAlt(java.lang.String alt) {
      return (ListComputer) super.setAlt(alt);
    }

    @Override
    public ListComputer setFields(java.lang.String fields) {
      return (ListComputer) super.setFields(fields);
    }

    @Override
    public ListComputer setKey(java.lang.String key) {
      return (ListComputer) super.setKey(key);
    }

    @Override
    public ListComputer setOauthToken(java.lang.String oauthToken) {
      return (ListComputer) super.setOauthToken(oauthToken);
    }

    @Override
    public ListComputer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListComputer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListComputer setQuotaUser(java.lang.String quotaUser) {
      return (ListComputer) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListComputer setUserIp(java.lang.String userIp) {
      return (ListComputer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean assigned;

    /**

     */
    public java.lang.Boolean getAssigned() {
      return assigned;
    }

    public ListComputer setAssigned(java.lang.Boolean assigned) {
      this.assigned = assigned;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListComputer setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String schoolId;

    /**

     */
    public java.lang.String getSchoolId() {
      return schoolId;
    }

    public ListComputer setSchoolId(java.lang.String schoolId) {
      this.schoolId = schoolId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListComputer setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListComputer set(String parameterName, Object value) {
      return (ListComputer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listHistory".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link ListHistory#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListHistory listHistory() throws java.io.IOException {
    ListHistory result = new ListHistory();
    initialize(result);
    return result;
  }

  public class ListHistory extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponseHistory> {

    private static final String REST_PATH = "history";

    /**
     * Create a request for the method "listHistory".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link ListHistory#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListHistory#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListHistory() {
      super(Backboneendpoint.this, "GET", REST_PATH, null, singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponseHistory.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListHistory setAlt(java.lang.String alt) {
      return (ListHistory) super.setAlt(alt);
    }

    @Override
    public ListHistory setFields(java.lang.String fields) {
      return (ListHistory) super.setFields(fields);
    }

    @Override
    public ListHistory setKey(java.lang.String key) {
      return (ListHistory) super.setKey(key);
    }

    @Override
    public ListHistory setOauthToken(java.lang.String oauthToken) {
      return (ListHistory) super.setOauthToken(oauthToken);
    }

    @Override
    public ListHistory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListHistory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListHistory setQuotaUser(java.lang.String quotaUser) {
      return (ListHistory) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListHistory setUserIp(java.lang.String userIp) {
      return (ListHistory) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListHistory setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String schoolId;

    /**

     */
    public java.lang.String getSchoolId() {
      return schoolId;
    }

    public ListHistory setSchoolId(java.lang.String schoolId) {
      this.schoolId = schoolId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListHistory setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListHistory set(String parameterName, Object value) {
      return (ListHistory) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listPackageX".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link ListPackageX#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListPackageX listPackageX() throws java.io.IOException {
    ListPackageX result = new ListPackageX();
    initialize(result);
    return result;
  }

  public class ListPackageX extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponsePackageX> {

    private static final String REST_PATH = "packagex";

    /**
     * Create a request for the method "listPackageX".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link ListPackageX#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListPackageX#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListPackageX() {
      super(Backboneendpoint.this, "GET", REST_PATH, null, singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponsePackageX.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListPackageX setAlt(java.lang.String alt) {
      return (ListPackageX) super.setAlt(alt);
    }

    @Override
    public ListPackageX setFields(java.lang.String fields) {
      return (ListPackageX) super.setFields(fields);
    }

    @Override
    public ListPackageX setKey(java.lang.String key) {
      return (ListPackageX) super.setKey(key);
    }

    @Override
    public ListPackageX setOauthToken(java.lang.String oauthToken) {
      return (ListPackageX) super.setOauthToken(oauthToken);
    }

    @Override
    public ListPackageX setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListPackageX) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListPackageX setQuotaUser(java.lang.String quotaUser) {
      return (ListPackageX) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListPackageX setUserIp(java.lang.String userIp) {
      return (ListPackageX) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListPackageX setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String schoolId;

    /**

     */
    public java.lang.String getSchoolId() {
      return schoolId;
    }

    public ListPackageX setSchoolId(java.lang.String schoolId) {
      this.schoolId = schoolId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListPackageX setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListPackageX set(String parameterName, Object value) {
      return (ListPackageX) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listSchool".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link ListSchool#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListSchool listSchool() throws java.io.IOException {
    ListSchool result = new ListSchool();
    initialize(result);
    return result;
  }

  public class ListSchool extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponseUser> {

    private static final String REST_PATH = "user";

    /**
     * Create a request for the method "listSchool".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link ListSchool#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListSchool#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListSchool() {
      super(Backboneendpoint.this, "GET", REST_PATH, null, singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponseUser.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListSchool setAlt(java.lang.String alt) {
      return (ListSchool) super.setAlt(alt);
    }

    @Override
    public ListSchool setFields(java.lang.String fields) {
      return (ListSchool) super.setFields(fields);
    }

    @Override
    public ListSchool setKey(java.lang.String key) {
      return (ListSchool) super.setKey(key);
    }

    @Override
    public ListSchool setOauthToken(java.lang.String oauthToken) {
      return (ListSchool) super.setOauthToken(oauthToken);
    }

    @Override
    public ListSchool setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListSchool) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListSchool setQuotaUser(java.lang.String quotaUser) {
      return (ListSchool) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListSchool setUserIp(java.lang.String userIp) {
      return (ListSchool) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListSchool setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListSchool setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListSchool set(String parameterName, Object value) {
      return (ListSchool) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listSoftware".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link ListSoftware#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListSoftware listSoftware() throws java.io.IOException {
    ListSoftware result = new ListSoftware();
    initialize(result);
    return result;
  }

  public class ListSoftware extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponseSoftware> {

    private static final String REST_PATH = "software";

    /**
     * Create a request for the method "listSoftware".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link ListSoftware#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListSoftware#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListSoftware() {
      super(Backboneendpoint.this, "GET", REST_PATH, null, singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponseSoftware.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListSoftware setAlt(java.lang.String alt) {
      return (ListSoftware) super.setAlt(alt);
    }

    @Override
    public ListSoftware setFields(java.lang.String fields) {
      return (ListSoftware) super.setFields(fields);
    }

    @Override
    public ListSoftware setKey(java.lang.String key) {
      return (ListSoftware) super.setKey(key);
    }

    @Override
    public ListSoftware setOauthToken(java.lang.String oauthToken) {
      return (ListSoftware) super.setOauthToken(oauthToken);
    }

    @Override
    public ListSoftware setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListSoftware) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListSoftware setQuotaUser(java.lang.String quotaUser) {
      return (ListSoftware) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListSoftware setUserIp(java.lang.String userIp) {
      return (ListSoftware) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListSoftware setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListSoftware setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListSoftware set(String parameterName, Object value) {
      return (ListSoftware) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listStudent".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link ListStudent#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListStudent listStudent() throws java.io.IOException {
    ListStudent result = new ListStudent();
    initialize(result);
    return result;
  }

  public class ListStudent extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponseStudent> {

    private static final String REST_PATH = "student";

    /**
     * Create a request for the method "listStudent".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link ListStudent#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListStudent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListStudent() {
      super(Backboneendpoint.this, "GET", REST_PATH, null, singularity.com.jlpsi.entities.backboneendpoint.model.CollectionResponseStudent.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListStudent setAlt(java.lang.String alt) {
      return (ListStudent) super.setAlt(alt);
    }

    @Override
    public ListStudent setFields(java.lang.String fields) {
      return (ListStudent) super.setFields(fields);
    }

    @Override
    public ListStudent setKey(java.lang.String key) {
      return (ListStudent) super.setKey(key);
    }

    @Override
    public ListStudent setOauthToken(java.lang.String oauthToken) {
      return (ListStudent) super.setOauthToken(oauthToken);
    }

    @Override
    public ListStudent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListStudent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListStudent setQuotaUser(java.lang.String quotaUser) {
      return (ListStudent) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListStudent setUserIp(java.lang.String userIp) {
      return (ListStudent) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListStudent setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String schoolId;

    /**

     */
    public java.lang.String getSchoolId() {
      return schoolId;
    }

    public ListStudent setSchoolId(java.lang.String schoolId) {
      this.schoolId = schoolId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListStudent setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListStudent set(String parameterName, Object value) {
      return (ListStudent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "login".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link Login#execute()} method to invoke the remote operation.
   *
   * @param content the {@link singularity.com.jlpsi.entities.backboneendpoint.model.User}
   * @return the request
   */
  public Login login(singularity.com.jlpsi.entities.backboneendpoint.model.User content) throws java.io.IOException {
    Login result = new Login(content);
    initialize(result);
    return result;
  }

  public class Login extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.User> {

    private static final String REST_PATH = "login";

    /**
     * Create a request for the method "login".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link Login#execute()} method to invoke the remote operation.
     * <p> {@link
     * Login#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link singularity.com.jlpsi.entities.backboneendpoint.model.User}
     * @since 1.13
     */
    protected Login(singularity.com.jlpsi.entities.backboneendpoint.model.User content) {
      super(Backboneendpoint.this, "POST", REST_PATH, content, singularity.com.jlpsi.entities.backboneendpoint.model.User.class);
    }

    @Override
    public Login setAlt(java.lang.String alt) {
      return (Login) super.setAlt(alt);
    }

    @Override
    public Login setFields(java.lang.String fields) {
      return (Login) super.setFields(fields);
    }

    @Override
    public Login setKey(java.lang.String key) {
      return (Login) super.setKey(key);
    }

    @Override
    public Login setOauthToken(java.lang.String oauthToken) {
      return (Login) super.setOauthToken(oauthToken);
    }

    @Override
    public Login setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Login) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Login setQuotaUser(java.lang.String quotaUser) {
      return (Login) super.setQuotaUser(quotaUser);
    }

    @Override
    public Login setUserIp(java.lang.String userIp) {
      return (Login) super.setUserIp(userIp);
    }

    @Override
    public Login set(String parameterName, Object value) {
      return (Login) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeSoftware".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link RemoveSoftware#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveSoftware removeSoftware(java.lang.String id) throws java.io.IOException {
    RemoveSoftware result = new RemoveSoftware(id);
    initialize(result);
    return result;
  }

  public class RemoveSoftware extends BackboneendpointRequest<Void> {

    private static final String REST_PATH = "software/{id}";

    /**
     * Create a request for the method "removeSoftware".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link RemoveSoftware#execute()} method to invoke the remote
     * operation. <p> {@link RemoveSoftware#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveSoftware(java.lang.String id) {
      super(Backboneendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveSoftware setAlt(java.lang.String alt) {
      return (RemoveSoftware) super.setAlt(alt);
    }

    @Override
    public RemoveSoftware setFields(java.lang.String fields) {
      return (RemoveSoftware) super.setFields(fields);
    }

    @Override
    public RemoveSoftware setKey(java.lang.String key) {
      return (RemoveSoftware) super.setKey(key);
    }

    @Override
    public RemoveSoftware setOauthToken(java.lang.String oauthToken) {
      return (RemoveSoftware) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveSoftware setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveSoftware) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveSoftware setQuotaUser(java.lang.String quotaUser) {
      return (RemoveSoftware) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveSoftware setUserIp(java.lang.String userIp) {
      return (RemoveSoftware) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public RemoveSoftware setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveSoftware set(String parameterName, Object value) {
      return (RemoveSoftware) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateStats".
   *
   * This request holds the parameters needed by the backboneendpoint server.  After setting any
   * optional parameters, call the {@link UpdateStats#execute()} method to invoke the remote
   * operation.
   *
   * @param type
   * @param qty
   * @return the request
   */
  public UpdateStats updateStats(java.lang.Integer type, java.lang.Integer qty) throws java.io.IOException {
    UpdateStats result = new UpdateStats(type, qty);
    initialize(result);
    return result;
  }

  public class UpdateStats extends BackboneendpointRequest<singularity.com.jlpsi.entities.backboneendpoint.model.Stats> {

    private static final String REST_PATH = "stats/{type}/{qty}";

    /**
     * Create a request for the method "updateStats".
     *
     * This request holds the parameters needed by the the backboneendpoint server.  After setting any
     * optional parameters, call the {@link UpdateStats#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateStats#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param type
     * @param qty
     * @since 1.13
     */
    protected UpdateStats(java.lang.Integer type, java.lang.Integer qty) {
      super(Backboneendpoint.this, "PUT", REST_PATH, null, singularity.com.jlpsi.entities.backboneendpoint.model.Stats.class);
      this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
      this.qty = com.google.api.client.util.Preconditions.checkNotNull(qty, "Required parameter qty must be specified.");
    }

    @Override
    public UpdateStats setAlt(java.lang.String alt) {
      return (UpdateStats) super.setAlt(alt);
    }

    @Override
    public UpdateStats setFields(java.lang.String fields) {
      return (UpdateStats) super.setFields(fields);
    }

    @Override
    public UpdateStats setKey(java.lang.String key) {
      return (UpdateStats) super.setKey(key);
    }

    @Override
    public UpdateStats setOauthToken(java.lang.String oauthToken) {
      return (UpdateStats) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateStats setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateStats) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateStats setQuotaUser(java.lang.String quotaUser) {
      return (UpdateStats) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateStats setUserIp(java.lang.String userIp) {
      return (UpdateStats) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer type;

    /**

     */
    public java.lang.Integer getType() {
      return type;
    }

    public UpdateStats setType(java.lang.Integer type) {
      this.type = type;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer qty;

    /**

     */
    public java.lang.Integer getQty() {
      return qty;
    }

    public UpdateStats setQty(java.lang.Integer qty) {
      this.qty = qty;
      return this;
    }

    @Override
    public UpdateStats set(String parameterName, Object value) {
      return (UpdateStats) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Backboneendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Backboneendpoint}. */
    @Override
    public Backboneendpoint build() {
      return new Backboneendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BackboneendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBackboneendpointRequestInitializer(
        BackboneendpointRequestInitializer backboneendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(backboneendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
